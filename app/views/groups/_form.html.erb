<%=form_for :group do |f|%>
  <%=f.label :name, "Tên nhóm:"%>
  <%= f.text_field :name, required: true, class: 'form-control' %>
	
	<%= f.label :students, "Sinh viên:"%>
  <%= f.text_field :students, required: true, class: 'form-control' %>

  <%=f.submit "Tạo nhóm", class:"btn btn-primary"%>
<%end%>
<ul id = 'student-list' class="hidden">
  <%@students.each do |student|%>
    <li><%= student.name%>-<%= student.std_id%>
  <%end%>
</ul>

<script type="text/javascript">
	function split( val ) {
      return val.split( /,\s*/ );
    }
  function extractLast( term ) {
      return split( term ).pop();
    }
  var listItems = document.getElementById('student-list').getElementsByTagName('li');

  var myArray = map(listItems, getText);

  function map(arrayLike, fn) {
      var ret = [], i = -1, len = arrayLike.length;
      while (++i < len) ret[i] = fn(arrayLike[i]);
      return ret;
  }

  function getText(node) {
      if (node.nodeType === 3) return node.data;
      var txt = '';
      if (node = node.firstChild) do {
          txt += getText(node);
      } while (node = node.nextSibling);
      return txt;
  }
 
    $( "#group_students" )
      // don't navigate away from the field on tab when selecting an item
      .on( "keydown", function( event ) {
        if ( event.keyCode === $.ui.keyCode.TAB &&
            $( this ).autocomplete( "instance" ).menu.active ) {
          event.preventDefault();
        }
      })
      .autocomplete({
        minLength: 0,
        source: function( request, response ) {
          // delegate back to autocomplete, but extract the last term
          response( $.ui.autocomplete.filter(
           myArray, extractLast( request.term ) ) );
        },
        focus: function() {
          // prevent value inserted on focus
          return false;
        },
        select: function( event, ui ) {
          var terms = split( this.value );
          // remove the current input
          terms.pop();
          // add the selected item
          terms.push( ui.item.value );
          // add placeholder to get the comma-and-space at the end
          terms.push( "" );
          this.value = terms.join( ", " );
          return false;
        }
      });
</script>