c
learning.student.groups
learning.student
learning.sclass
learning
group
c
group
c
group
c
group
c
group
c
group
c
group
c
group
c
group
cgroup
c
group.point
group
c
params[:group][:report]
params[:report]
group
c
group
params
c
params
c
params
c
GroupStudents.first
params
c
xlsx.row(1)
c
class
sclass
n
course
c
params[:group][:students][1].split("-")
params[:group][:students].each do |s| p s end
params[:group][:students]
params[:group][:student].each do |s| p s end
params[:group][:student].first
params[:group][:topic]
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params[:pc].each do |k,v| p k end
params[:pc].each do |pc| p pc end
params[:pc].each do |pc|
params
c
params
c
params
c
params
c
params
c
params
c
params
c
n
get_ratio_sum(sclass)
sclass
n
params
c
sclass
n
sclass
n
c
params[:point_component][:content]
params[:point_component]
params
sclass
sclass.point_components.build(content: params[:point_component][:content])
n
sclass.point_components.build
sclass
n
c
params
c
params
c
6.times do |i| p i end
6.times do |i|
xlsx.row(1).length
xlsx.row(1)[0]
xlsx.first_row
xlsx.cell(1,2)
xlsx.cell(2,2)
xlsx.cell(1,1)
xlsx.last_column
xlsx.last_row
xlsx.row(0)
xlsx.for(0)
xlsx.info
xlsx.row.count
xlsx.row(2)
xlsx.row(1)
xlsx.info
xlsx
c
params
xml_contents
c
file_data.respond_to?(:read)
xml_contents
file_data
params
c
cont = File.read(params[:file])
cont = File.read(params[:file].path)
file.respond_to?(:read)
file = params[:file]
Roo::Spreadsheet.open(File.open(params[:file]))
xlsx == Roo::Spreadsheet.open(File.open(params[:file]))
xlsx == Roo:Spreadsheet.open(File.open(params[:file]))
require 'roo'
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params[:term_point].count
params[:term_point].each do |k,v| p k end
params[:term_point].each do |k,v|
params[:term_point]
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
sclass = Sclass.find_by(params[:sclass_id])
sclass
n
c
Sclass.find(params[:sclass_id])
params[:sclass_id]
params[:document][:sclass_id]
sclass
n
params
c
params
c
doc
c
params
c
params
c
current_user.sclasses
current_user
continue
c
n
c
d
c
student.learnings.where(sclass: @sclass).attendance
student.learnings.where(sclass: @sclass)
c
@tests
c
Test.first.destroy
Test.first
current_user.tests
current_user
@tests
continue
params
continue
params
continue
params
params[:test_id]
Test.find(id: params[:test_id])
Test.find(params[:test_id])
params
test
t√©t
continue
current_user.sclasses
current_user
@sclasses
c
params
c
continue
learning.process_point
learning
continue
params
continue
params
continue
params
continue
params
